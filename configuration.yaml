homeassistant:
  name: Home
  latitude: !secret latitude
  longitude: !secret longitude
  elevation: 0
  unit_system: metric
  time_zone: Europe/Amsterdam
  auth_providers:
    - type: legacy_api_password
      api_password: !secret http_password
    - type: trusted_networks
      trusted_networks:
        - 127.0.0.1
        - 192.168.10.0/24
    - type: homeassistant

# Default config
default_config:

# Configure Lovelace using YAML
lovelace:
  mode: yaml

# Alexa
alexa:

# Enable the hass.io tab
hassio:

# Enable debug info
logger:
  default: info
  logs:
    homeassistant.components.device_tracker.fritz: warning
    buienradar.buienradar: error
    buienradar.buienradar_json: error

# Enable history
recorder:
  include:
    entities:
      - sensor.livingroom_temperature
      - sensor.power_consumption
      - sensor.power_production
      - sensor.download
      - sensor.upload

history:
  include:
    entities:
      - sensor.livingroom_temperature
      - sensor.power_consumption
      - sensor.power_production
      - sensor.download
      - sensor.upload

# Configure the web interface
http:
  server_port: 443
  # base_url: !secret base_url
  ssl_certificate: /ssl/fullchain.pem
  ssl_key: /ssl/privkey.pem

# Slide
slide:
  username: robhuls@gmail.com
  password: !secret slide_password

# IKEA tradfri
tradfri:
  host: 192.168.10.49

# Philips Hue lights
hue:
  bridges:
    - host: 192.168.10.22

# Zwave network
zwave:
  usb_path: /dev/ttyACM0

# RFXCOM
rfxtrx:
  device: /dev/ttyUSB0

# Smart meter, Cresta, Fritz, Certificate, Hue sensors
sensor:
  - platform: dsmr
    port: /dev/ttyUSB1
    dsmr_version: 4
  - platform: rfxtrx
    automatic_add: true
    devices:
      0a520700330e00d7300159:
        name: Livingroom
        data_type:
         - Humidity
         - Temperature
         - Battery numeric
  - platform: fritzbox_netmonitor
  - platform: rova
    zip_code: 8043JH
    house_number: 64
    monitored_conditions:
      - paper
  - platform: template
    sensors:
      # Format ROVA time
      rova_paper_date:
        value_template: "{{ as_timestamp(states('sensor.rova_paper'))| timestamp_custom('%d-%m-%Y') }}"
      # Retrieve network speed
      upload:
        unit_of_measurement: 'Mbit/s'
        value_template: "{{ '%.2f'|format(state_attr('sensor.fritz_netmonitor', 'transmission_rate_up')*8/1024/1024) }}"
      download:
        unit_of_measurement: 'Mbit/s'
        value_template: "{{ '%.2f'|format(state_attr('sensor.fritz_netmonitor', 'transmission_rate_down')*8/1024/1024) }}"
      # Retrieve sun up/down
      sunrise:
        entity_id: sun.sun
        friendly_name: 'Next Sunrise'
        value_template: >
          {{ as_timestamp(states.sun.sun.attributes.next_rising) | timestamp_custom('%H:%M') }}
        icon_template: mdi:weather-sunset-up
      sunset:
        entity_id: sun.sun
        friendly_name: 'Next Sunset'
        value_template: >
          {{ as_timestamp(states.sun.sun.attributes.next_setting) | timestamp_custom('%H:%M') }}
        icon_template: mdi:weather-sunset-down
      # Extract Hue battery states
      hue_battery_hall:
        value_template: "{{ state_attr('sensor.hall_light_level_2', 'battery_level')}}"
        unit_of_measurement: '%'
      hue_battery_scullery:
        value_template: "{{ state_attr('sensor.kitchen_light_level_2', 'battery_level')}}"
        unit_of_measurement: '%'
      hue_battery_restroom:
        value_template: "{{ state_attr('sensor.restroom_light_level_2', 'battery_level')}}"
        unit_of_measurement: '%'
      # Extract Hue light levels
      hue_light_hall:
        value_template: "{{ state_attr('sensor.hall_light_level_2', 'lightlevel')}}"
        unit_of_measurement: Lux
      hue_light_restroom:
        value_template: "{{ state_attr('sensor.restroom_light_level_2', 'lightlevel')}}"
        unit_of_measurement: Lux
      hue_light_scullery:
        value_template: "{{ state_attr('sensor.kitchen_light_level_2', 'lightlevel')}}"
        unit_of_measurement: Lux

# Create an alarm clock
  - platform: time_date
    display_options:
      - 'time'
      - 'date'
  - platform: template
    sensors:
      alarm_clock_hour:
        value_template: '{{ states.input_number.alarm_clock_hour.state | int }}'
      alarm_clock_minute:
        value_template: '{{ states.input_number.alarm_clock_minute.state | int }}'
      alarm_clock_time:
        value_template: >-
          {{ states.sensor.alarm_clock_hour.state }}:
          {%- if states.sensor.alarm_clock_minute.state|length == 1 -%}
            0
          {%- endif -%}
            {{ states.sensor.alarm_clock_minute.state }}
      alarm_clock_time_long:
        value_template: >-
          {% if states.sensor.alarm_clock_hour.state|length == 1 -%}
            0
          {%- endif -%}
            {{ states.sensor.alarm_clock_hour.state }}:
          {%- if states.sensor.alarm_clock_minute.state|length == 1 -%}
            0
          {%- endif -%}
            {{ states.sensor.alarm_clock_minute.state }}

switch:
  - platform: rfxtrx
    devices:
      0b11000100ced7f209010f60:
        name: Kitchen Light Right
      0b11000200ced7f20a010f70:
        name: Kitchen Light Left
      0b11000400ced7f20b000060:
        name: Bookcase Light
      0b11000100e1dcf20c010f50:
        name: Bedroom Switch Left
        fire_event: True
      0b11000300e1dcf20b010f50:
        name: Bedroom Switch Right
        fire_event: True
      0b11000500fd656e0c000050:
        name: Livingroom Switch Left
        fire_event: True
      0b11000900fd656e0b000060:
        name: Livingroom Switch Right
        fire_event: True
      0b11000d00ed971e0c010f70:
        name: Kitchen Switch Left
        fire_event: True
      0b11001400ed971e0b000070:
        name: Kitchen Switch Right
        fire_event: True

# Device trackers
device_tracker:
  - platform: fritz
    username: admin
    password: !secret fritz_pass

# Wake-on-lan for LG TV
wake_on_lan:

# NAD7050, spotify en LG
media_player:
  - platform: nad
    type: TCP
    name: NAD7050
    host: 192.168.10.20
    min_volume: -60
    max_volume: 0
#   - platform: spotify
#     client_id: !secret spotify_id
#     client_secret: !secret spotify_secret
  - platform: webostv
    host: 192.168.10.47
    turn_on_action:
      service: wake_on_lan.send_magic_packet
      data:
        mac: "78-5D-C8-F0-32-4F"
    customize:
      sources:
        - youtube
        - netflix
        - NPO Start
        - Disney+
        - HDMI 1
        - HDMI 2

# Daikin heat pump
daikin:
  hosts:
    - 192.168.10.26

# Buienradar picture and weather
camera:
  - platform: buienradar

weather:
  - platform: buienradar
    forecast: true

# Alexa intents
intent_script:
  ActivateSceneIntent:
    action:
      service: scene.turn_on
      data_template:
        entity_id: scene.{{ Scene | replace(" ", "_") }}
    speech:
      type: plain
      text: OK
  RunScriptIntent:
    action:
      service: script.turn_on
      data_template:
        entity_id: script.{{ Script | replace(" ", "_") }}
    speech:
      type: plain
      text: done
  RadioIntent:
    action:
      service: script.turn_on
      data_template:
        entity_id: script.{{ Station | replace(" ", "_") }}
    speech:
      type: plain
      text: playing {{Station}}
  amzn1.ask.skill.3c129696-0f67-4a27-9a25-e458c8353469:
    action:
      service: script.turn_on
      entity_id: script.quiet
    speech:
      type: plain
      text: OK

# Make my alarm clock
input_number:
  alarm_clock_hour:
    name: Hour
    icon: mdi:timer
    initial: 6
    min: 0
    max: 23
    step: 1
  alarm_clock_minute:
    name: Minute
    icon: mdi:timer
    initial: 15
    min: 0
    max: 55
    step: 5

input_boolean:
  alarm_clock_status:
    name: Alarm Clock Status
    initial: off
    icon: mdi:alarm-check
  alarm_clock_radio:
    name: Alarm Clock Radio
    initial: on
    icon: mdi:radio

# Input for selecting radio station
input_select:
  radio_station:
    name: 'Select Radio Station:'
    options:
      - Radio 1
      - Radio 2
      - Radio 10
      - BNR Nieuwsradio
      - 40up Radio
      - Sublime FM
      - WDR 4
      - qmusic
    icon: mdi:radio

group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml
scene: !include scenes.yaml
