homeassistant:
  name: Home
  latitude: !secret latitude
  longitude: !secret longitude
  elevation: 0
  unit_system: metric
  time_zone: Europe/Amsterdam

# Enable the frontend
frontend:

# Configure Lovelace using YAML
lovelace:
  mode: yaml

# System health
system_health:

# Alexa
alexa:

# Enable the hass.io tab
hassio:

# Enable configuration UI
config:

# Enable debug info
logger:
  default: info
  logs:
    homeassistant.components.device_tracker.fritz: warning

# Enable history
recorder:
  include:
    entities:
      - sensor.livingroom_temperature
      - sensor.power_consumption
      - sensor.power_production
      - sensor.download
      - sensor.upload
history:
  include:
    entities:
      - sensor.livingroom_temperature
      - sensor.power_consumption
      - sensor.power_production
      - sensor.download
      - sensor.upload

# Configure the web interface
http:
  api_password: !secret http_password
  trusted_networks:
    - 127.0.0.1
    - 192.168.10.0/24
  server_port: 443
  base_url: !secret base_url
  ssl_certificate: /ssl/fullchain.pem
  ssl_key: /ssl/privkey.pem

# Add the configuration editor and pi-hole UI element
panel_iframe:
  configurator:
    title: Configurator
    icon: mdi:wrench
    url: https://hassio.local:3218

tradfri:
  host: 192.168.10.49

# Track the sun
sun:

# discover components
# discovery:
#   ignore:
#     - daikin
#     - apple_tv

# Philips Hue lights
hue:
  bridges:
    - host: 192.168.10.22

# Zwave network
zwave:
  usb_path: /dev/ttyACM0

# RFXCOM
rfxtrx:
  device: /dev/ttyUSB1

# Smart meter, buienradar, Cresta, Fritz, Certificate, Hue sensors
sensor:
  - platform: dsmr
    port: /dev/ttyUSB0
    dsmr_version: 4
  - platform: rfxtrx
    devices:
      0a520701310e00b43b0159:
        name: Livingroom
  - platform: fritzbox_netmonitor
# How long did you watch TV today
  - platform: history_stats
    name: TV ON today
    entity_id: media_player.lg_webos_smart_tv
    state: 'playing'
    type: time
    start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
    end: '{{ now() }}'
# Parse sensor values from the philips Hue platform
  - platform: rest
    resource: http://192.168.10.22/api/9BMePcyRlGQlhW8UmJ5Qxa6-swybrhibFo39tT-D/sensors/2
    value_template: '{{ value_json.state.temperature | float / 100 }}'
    unit_of_measurement: °C
    name: 'Hall temperature'
  - platform: rest
    resource: http://192.168.10.22/api/9BMePcyRlGQlhW8UmJ5Qxa6-swybrhibFo39tT-D/sensors/7
    value_template: '{{ value_json.state.temperature | float / 100 }}'
    unit_of_measurement: °C
    name: 'Kitchen temperature'
  - platform: rest
    resource: http://192.168.10.22/api/9BMePcyRlGQlhW8UmJ5Qxa6-swybrhibFo39tT-D/sensors/11
    value_template: '{{ value_json.state.temperature | float / 100 }}'
    unit_of_measurement: °C
    name: 'Restroom temperature'
  - platform: rest
    resource: http://192.168.10.22/api/9BMePcyRlGQlhW8UmJ5Qxa6-swybrhibFo39tT-D/sensors/4
    value_template: '{{ value_json.state.lightlevel }}'
    unit_of_measurement: Lux
    name: 'Hall light level'
  - platform: rest
    resource: http://192.168.10.22/api/9BMePcyRlGQlhW8UmJ5Qxa6-swybrhibFo39tT-D/sensors/9
    value_template: '{{ value_json.state.lightlevel }}'
    unit_of_measurement: Lux
    name: 'Kitchen light level'
  - platform: rest
    resource: http://192.168.10.22/api/9BMePcyRlGQlhW8UmJ5Qxa6-swybrhibFo39tT-D/sensors/13
    value_template: '{{ value_json.state.lightlevel }}'
    unit_of_measurement: Lux
    name: 'Restroom light level'
# Retrieve network speed
  - platform: template
    sensors:
      upload:
        unit_of_measurement: 'Mbps'
        value_template: "{{ '%.2f'|format(state_attr('sensor.fritz_netmonitor', 'transmission_rate_up')*8/1024/1024) }}"
      download:
        unit_of_measurement: 'Mbps'
        value_template: "{{ '%.2f'|format(state_attr('sensor.fritz_netmonitor', 'transmission_rate_down')*8/1024/1024) }}"

# Create an alarm clock
  - platform: time_date
    display_options:
      - 'time'
      - 'date'
  - platform: template
    sensors:
      alarm_clock_hour:
        value_template: '{{ states.input_number.alarm_clock_hour.state | int }}'
      alarm_clock_minute:
        value_template: '{{ states.input_number.alarm_clock_minute.state | int }}'
      alarm_clock_time:
        value_template: >-
          {{ states.sensor.alarm_clock_hour.state }}:
          {%- if states.sensor.alarm_clock_minute.state|length == 1 -%}
            0
          {%- endif -%}
            {{ states.sensor.alarm_clock_minute.state }}
      alarm_clock_time_long:
        value_template: >-
          {% if states.sensor.alarm_clock_hour.state|length == 1 -%}
            0
          {%- endif -%}
            {{ states.sensor.alarm_clock_hour.state }}:
          {%- if states.sensor.alarm_clock_minute.state|length == 1 -%}
            0
          {%- endif -%}
            {{ states.sensor.alarm_clock_minute.state }}

switch:
  - platform: rfxtrx
    devices:
      0b11000100ced7f209010f60:
        name: Kitchen Light Right
      0b11000200ced7f20a010f70:
        name: Kitchen Light Left
      0b11000400ced7f20b000060:
        name: Bookcase Light
      0b11000100e1dcf20c010f50:
        name: Bedroom Switch Left
        fire_event: True
      0b11000300e1dcf20b010f50:
        name: Bedroom Switch Right
        fire_event: True
      0b11000500fd656e0c000050:
        name: Livingroom Switch Left
        fire_event: True
      0b11000900fd656e0b000060:
        name: Livingroom Switch Right
        fire_event: True
      0b11000d00ed971e0c010f70:
        name: Kitchen Switch Left
        fire_event: True
      0b11001400ed971e0b000070:
        name: Kitchen Switch Right
        fire_event: True

# Device trackers
device_tracker:
  - platform: fritz
    username: admin
    password: !secret fritz_pass
#   - platform: icloud
#     username: !secret icloud_name
#     password: !secret icloud_pwd
#     gps_accuracy_threshold: 20

# Wake-on-lan for LG TV
wake_on_lan:

# NAD7050, spotify en LG
media_player:
  - platform: nad
    type: TCP
    name: NAD7050
    host: 192.168.10.20
    min_volume: -60
    max_volume: -20
#   - platform: spotify
#     client_id: !secret spotify_id
#     client_secret: !secret spotify_secret
  - platform: webostv
    host: 192.168.10.47
    turn_on_action:
      service: wake_on_lan.send_magic_packet
      data:
        mac: "78-5D-C8-F0-32-4F"
    customize:
      sources:
        - youtube
        - netflix
        - NPO Start
        - HDMI 1
        - HDMI 2

# Daikin heat pump
daikin:
  hosts:
    - 192.168.10.26
# climate:
#   - platform: daikin
#     name: daikin
#     host: 192.168.10.26
#     monitored_conditions:
#       - inside_temperature
#       - outside_temperature

# Alexa intents
intent_script:
  ActivateSceneIntent:
    action:
      service: scene.turn_on
      data_template:
        entity_id: scene.{{ Scene | replace(" ", "_") }}
    speech:
      type: plain
      text: OK
  RunScriptIntent:
    action:
      service: script.turn_on
      data_template:
        entity_id: script.{{ Script | replace(" ", "_") }}
    speech:
      type: plain
      text: done
  RadioIntent:
    action:
      service: script.turn_on
      data_template:
        entity_id: script.{{ Station | replace(" ", "_") }}
    speech:
      type: plain
      text: playing {{Station}}
  amzn1.ask.skill.3c129696-0f67-4a27-9a25-e458c8353469:
    action:
      service: script.turn_on
      entity_id: script.quiet
    speech:
      type: plain
      text: OK

# Make my alarm clock
input_number:
  alarm_clock_hour:
    name: Hour
    icon: mdi:timer
    initial: 6
    min: 0
    max: 23
    step: 1
  alarm_clock_minute:
    name: Minute
    icon: mdi:timer
    initial: 15
    min: 0
    max: 55
    step: 5

input_boolean:
  alarm_clock_status:
    name: Alarm Clock Status
    initial: off
    icon: mdi:alarm-check
  alarm_clock_radio:
    name: Alarm Clock Radio
    initial: on
    icon: mdi:radio

# Input for selecting radio station
input_select:
  radio_station:
    name: 'Select Radio Station:'
    options:
      - Radio 1
      - Radio 2
      - Radio 10
      - BNR Nieuwsradio
      - 40up Radio
      - Sublime FM
      - WDR 4
    icon: mdi:radio

group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml
scene: !include scenes.yaml
